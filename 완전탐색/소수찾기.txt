#include <string>
#include <vector>
#include <algorithm>
using namespace std;
vector <int> d;

bool check(int n) {
    if (n == 0 || n == 1) return false;
    for (int i = 2; i * i <= n; i++) {
        if (n % i == 0)  return false; 
    }
    return true;
}

void go(int i, int n, string numbers, string prime) {
    if (i >= n) {
        if (prime.length() > 0) {
            int prime_int = stoi(prime);
            if (check(prime_int)) d.push_back(prime_int);
        }
        return;
    }
    go(i + 1, n, numbers, prime + numbers[i]);
    go(i + 1, n, numbers, prime);
}

int solution(string numbers) {
    int answer = 0;
    sort(numbers.begin(), numbers.end());
    do {
        go(0, numbers.length(), numbers, "");
    } while (next_permutation(numbers.begin(), numbers.end()));

    sort(d.begin(), d.end());
    d.erase(unique(d.begin(), d.end()), d.end());
    answer = d.size();
    return answer;
}